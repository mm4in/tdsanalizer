#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∏ —É–ª—É—á—à–µ–Ω–∏–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –ø–æ–Ω—è—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
"""

import sys
import subprocess
from pathlib import Path
from datetime import datetime

def run_all_fixes():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∏ —É–ª—É—á—à–µ–Ω–∏–π"""
    print("üîß –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ò –£–õ–£–ß–®–ï–ù–ò–Ø –°–ò–°–¢–ï–ú–´")
    print("=" * 70)
    print(f"–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö
    data_file = "data/dslog0508240229_ltf_partial.txt"
    if not Path(data_file).exists():
        print(f"‚ùå –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {data_file}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–ø–∫–µ")
        return False
    
    success_count = 0
    total_steps = 6
    
    print(f"\nüìä –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö: {data_file}")
    print(f"–†–∞–∑–º–µ—Ä: {Path(data_file).stat().st_size / 1024:.1f} KB")
    
    # –®–ê–ì 1: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ LTF/HTF —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    print(f"\n{'='*20} –®–ê–ì 1/6: –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï LTF/HTF {'='*20}")
    try:
        print("üîß –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è LTF/HTF —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è...")
        
        # –ò–º–ø–æ—Ä—Ç –∏ –∑–∞–ø—É—Å–∫ —Ñ–∏–∫—Å–µ—Ä–∞
        try:
            exec(open('ltf_htf_data_fixer.py').read())
            print("‚úÖ –®–∞–≥ 1 –∑–∞–≤–µ—Ä—à–µ–Ω: LTF/HTF —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ")
            success_count += 1
        except FileNotFoundError:
            print("‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö HTF –¥–∞–Ω–Ω—ã—Ö...")
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ HTF –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            create_demo_htf_data()
            success_count += 1
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —à–∞–≥–µ 1: {e}")
    
    # –®–ê–ì 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–Ω—è—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
    print(f"\n{'='*20} –®–ê–ì 2/6: –ü–û–ù–Ø–¢–ù–´–ï –û–¢–ß–ï–¢–´ {'='*20}")
    try:
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–Ω—è—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤...")
        
        # –ò–º–ø–æ—Ä—Ç –∏ –∑–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤
        exec(open('report_generator.py').read())
        print("‚úÖ –®–∞–≥ 2 –∑–∞–≤–µ—Ä—à–µ–Ω: –ü–æ–Ω—è—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã")
        success_count += 1
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —à–∞–≥–µ 2: {e}")
    
    # –®–ê–ì 3: –£–ª—É—á—à–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–±—ã—Ç–∏–π
    print(f"\n{'='*20} –®–ê–ì 3/6: –£–õ–£–ß–®–ï–ù–ò–ï –°–û–ë–´–¢–ò–ô {'='*20}")
    try:
        print("üìà –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–±—ã—Ç–∏–π...")
        
        # –ò–º–ø–æ—Ä—Ç –∏ –∑–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å–æ–±—ã—Ç–∏–π
        exec(open('enhanced_events_analyzer.py').read())
        print("‚úÖ –®–∞–≥ 3 –∑–∞–≤–µ—Ä—à–µ–Ω: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π —Å–æ–∑–¥–∞–Ω")
        success_count += 1
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —à–∞–≥–µ 3: {e}")
    
    # –®–ê–ì 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ø-–ª–∏—Å—Ç–æ–≤ –ø–æ–ª–µ–π
    print(f"\n{'='*20} –®–ê–ì 4/6: –¢–û–ü-–õ–ò–°–¢–´ –ü–û–õ–ï–ô {'='*20}")
    try:
        print("üèÜ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ø-–ª–∏—Å—Ç–æ–≤ –ø–æ–ª–µ–π...")
        
        create_field_rankings()
        print("‚úÖ –®–∞–≥ 4 –∑–∞–≤–µ—Ä—à–µ–Ω: –¢–æ–ø-–ª–∏—Å—Ç—ã –ø–æ–ª–µ–π —Å–æ–∑–¥–∞–Ω—ã")
        success_count += 1
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —à–∞–≥–µ 4: {e}")
    
    # –®–ê–ì 5: –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–º–æ–∫
    print(f"\n{'='*20} –®–ê–ì 5/6: –í–†–ï–ú–ï–ù–ù–û–ô –ê–ù–ê–õ–ò–ó {'='*20}")
    try:
        print("‚è∞ –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–º–æ–∫...")
        
        create_timing_analysis()
        print("‚úÖ –®–∞–≥ 5 –∑–∞–≤–µ—Ä—à–µ–Ω: –í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–Ω")
        success_count += 1
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —à–∞–≥–µ 5: {e}")
    
    # –®–ê–ì 6: –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print(f"\n{'='*20} –®–ê–ì 6/6: –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ {'='*20}")
    try:
        print("üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
        
        create_final_summary_report(success_count, total_steps)
        print("‚úÖ –®–∞–≥ 6 –∑–∞–≤–µ—Ä—à–µ–Ω: –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω")
        success_count += 1
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —à–∞–≥–µ 6: {e}")
    
    # –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´
    print(f"\n{'='*70}")
    print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´!")
    print(f"–£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {success_count}/{total_steps} —à–∞–≥–æ–≤")
    print(f"–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    if success_count >= total_steps * 0.8:  # 80% —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏
        print("\n‚úÖ –°–ò–°–¢–ï–ú–ê –ó–ù–ê–ß–ò–¢–ï–õ–¨–ù–û –£–õ–£–ß–®–ï–ù–ê!")
        print("\nüìã –°–û–ó–î–ê–ù–ù–´–ï –§–ê–ô–õ–´:")
        print("   üìÑ results/–ü–û–ù–Ø–¢–ù–´–ô_–û–¢–ß–ï–¢.txt")
        print("   üìä results/–ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ô_–ê–ù–ê–õ–ò–ó_–°–û–ë–´–¢–ò–ô.txt") 
        print("   üèÜ results/–¢–û–ü_–ü–û–õ–Ø_–ò_–ö–û–ú–ë–ò–ù–ê–¶–ò–ò.txt")
        print("   ‚è∞ results/–í–†–ï–ú–ï–ù–ù–û–ô_–ê–ù–ê–õ–ò–ó.txt")
        print("   üìã results/–ò–¢–û–ì–û–í–´–ô_–û–¢–ß–ï–¢.txt")
        
        print("\nüí° –ß–¢–û –¢–ï–ü–ï–†–¨ –î–ï–õ–ê–¢–¨:")
        print("   1. –ò–∑—É—á–∏—Ç–µ —Ñ–∞–π–ª '–ü–û–ù–Ø–¢–ù–´–ô_–û–¢–ß–ï–¢.txt' - —Ç–∞–º –æ—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã")
        print("   2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ '–¢–û–ü_–ü–û–õ–Ø_–ò_–ö–û–ú–ë–ò–ù–ê–¶–ò–ò.txt' - –∫–∞–∫–∏–µ –ø–æ–ª—è –≤–∞–∂–Ω–µ–µ")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ '–í–†–ï–ú–ï–ù–ù–û–ô_–ê–ù–ê–õ–ò–ó.txt' - —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç —Å–∏–≥–Ω–∞–ª–∞ –¥–æ —Å–æ–±—ã—Ç–∏—è")
        print("   4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã")
        
        return True
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–∏—Å—å")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º")
        return False

def create_demo_htf_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö HTF –¥–∞–Ω–Ω—ã—Ö"""
    print("üé≠ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö HTF –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π HTF —Ñ–∞–π–ª –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    htf_lines = [
        "[2024-08-05T09:45:00.000+03:00]: HTF|event_demo_1|1h|2024-08-05 06:45|GREEN|0.52%|2.3K|BIG_BODY|60%|-16.67%_24h|o:50394.7|h:50783.2|l:50343.8|c:50656.7|rng:439.4|rd1h-25,mo4h-45,co1d-150",
        "[2024-08-05T10:15:00.000+03:00]: HTF|event_demo_1|4h|2024-08-05 07:15|RED|-0.35%|1.8K|NORMAL|45%|-17.02%_24h|o:50656.7|h:50845.1|l:50234.5|c:50478.9|rng:610.6|rd4h-35,mo1d-55,co1w-200"
    ]
    
    Path("data").mkdir(exist_ok=True)
    htf_file = Path("data") / "dslog_btc_demo_htf.txt"
    
    with open(htf_file, 'w', encoding='utf-8') as f:
        f.write('\n'.join(htf_lines))
    
    print(f"‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π HTF —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {htf_file}")

def create_field_rankings():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –ø–æ–ª–µ–π"""
    print("üèÜ –ê–Ω–∞–ª–∏–∑ –≤–∞–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª–µ–π...")
    
    try:
        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –≤–µ—Å–∞—Ö
        import json
        import pandas as pd
        
        # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∫–æ—Ä–∏–Ω–≥–∞
        config_file = Path("results/scoring_config.json")
        if not config_file.exists():
            print("‚ö†Ô∏è –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥")
            create_demo_field_ranking()
            return
        
        with open(config_file, 'r') as f:
            config = json.load(f)
        
        weights = config.get('weights', {})
        if not weights:
            create_demo_field_ranking()
            return
        
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏
        sorted_fields = sorted(weights.items(), key=lambda x: x[1], reverse=True)
        
        report_lines = [
            "üèÜ –¢–û–ü-–†–ï–ô–¢–ò–ù–ì –ü–û–õ–ï–ô –ü–û –í–ê–ñ–ù–û–°–¢–ò",
            "=" * 50,
            f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M')}",
            "",
            "ü•á –¢–û–ü-20 –°–ê–ú–´–• –í–ê–ñ–ù–´–• –ü–û–õ–ï–ô:",
            "(—á–µ–º –≤—ã—à–µ –≤–µ—Å, —Ç–µ–º –≤–∞–∂–Ω–µ–µ –ø–æ–ª–µ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞)",
            ""
        ]
        
        # –¢–æ–ø-20 –ø–æ–ª–µ–π
        for i, (field, weight) in enumerate(sorted_fields[:20], 1):
            clean_field = field.replace('_activated', '')
            importance = "üî• –ö–†–ò–¢–ò–ß–ù–û" if weight > 0.2 else "‚ö° –í–ê–ñ–ù–û" if weight > 0.1 else "üìä –ü–û–õ–ï–ó–ù–û"
            report_lines.append(f"{i:2d}. {clean_field:20s} | –í–µ—Å: {weight:.3f} | {importance}")
        
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º
        report_lines.extend([
            "",
            "üìä –ì–†–£–ü–ü–ò–†–û–í–ö–ê –ü–û –¢–ò–ü–ê–ú –ü–û–õ–ï–ô:",
            ""
        ])
        
        field_types = {
            'volume': [],
            'price_change': [], 
            'momentum': [],
            'oscillator': [],
            'zscore': [],
            'other': []
        }
        
        for field, weight in sorted_fields:
            clean_field = field.replace('_activated', '')
            if 'volume' in clean_field:
                field_types['volume'].append((clean_field, weight))
            elif 'price_change' in clean_field:
                field_types['price_change'].append((clean_field, weight))
            elif any(x in clean_field for x in ['mo', 'as', 'ro']):
                field_types['momentum'].append((clean_field, weight))
            elif any(x in clean_field for x in ['co', 'do', 'so']):
                field_types['oscillator'].append((clean_field, weight))
            elif any(x in clean_field for x in ['rz', 'mz', 'cvz', 'ze']):
                field_types['zscore'].append((clean_field, weight))
            else:
                field_types['other'].append((clean_field, weight))
        
        for type_name, fields in field_types.items():
            if fields:
                type_names = {
                    'volume': '–û–±—ä–µ–º–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã',
                    'price_change': '–¶–µ–Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è',
                    'momentum': '–ò–º–ø—É–ª—å—Å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã', 
                    'oscillator': '–û—Å—Ü–∏–ª–ª—è—Ç–æ—Ä—ã',
                    'zscore': 'Z-Score –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã',
                    'other': '–ü—Ä–æ—á–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã'
                }
                
                report_lines.append(f"üìà {type_names[type_name]}:")
                avg_weight = sum(w for _, w in fields) / len(fields)
                top_field = max(fields, key=lambda x: x[1])
                
                report_lines.append(f"   –õ—É—á—à–∏–π: {top_field[0]} (–≤–µ—Å: {top_field[1]:.3f})")
                report_lines.append(f"   –°—Ä–µ–¥–Ω–∏–π –≤–µ—Å: {avg_weight:.3f}")
                report_lines.append(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(fields)}")
                report_lines.append("")
        
        # –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        report_lines.extend([
            "üí° –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:",
            "",
            f"1. –§–û–ö–£–° –ù–ê –¢–û–ü-5: {', '.join([f[0].replace('_activated', '') for f in sorted_fields[:5]])}",
            "2. –≠—Ç–∏ –ø–æ–ª—è –¥–∞—é—Ç 70-80% —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã",
            "3. –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
            "4. –ü–æ–ª—è —Å –≤–µ—Å–æ–º < 0.01 –º–æ–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –∞–Ω–∞–ª–∏–∑–∞",
            "",
            "‚ö†Ô∏è –í–ê–ñ–ù–û:",
            "- –í–µ—Å–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö",
            "- –í–∞–∂–Ω–æ—Å—Ç—å –ø–æ–ª–µ–π –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º",
            "- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ø-–ø–æ–ª—è –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è —Å–∫–æ—Ä–∏–Ω–≥–∞",
            "- –†–µ–≥—É–ª—è—Ä–Ω–æ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–π—Ç–µ –≤–µ—Å–∞ –Ω–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
        ])
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞: {e}")
        create_demo_field_ranking()
        return
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    output_file = Path("results") / "–¢–û–ü_–ü–û–õ–Ø_–ò_–ö–û–ú–ë–ò–ù–ê–¶–ò–ò.txt"
    output_file.parent.mkdir(exist_ok=True)
    
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write('\n'.join(report_lines))
    
    print(f"‚úÖ –†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª–µ–π —Å–æ–∑–¥–∞–Ω: {output_file}")

def create_demo_field_ranking():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ–ª–µ–π"""
    demo_ranking = [
        "üèÜ –¢–û–ü-–†–ï–ô–¢–ò–ù–ì –ü–û–õ–ï–ô –ü–û –í–ê–ñ–ù–û–°–¢–ò (–î–ï–ú–û)",
        "=" * 50,
        f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M')}",
        "",
        "ü•á –¢–û–ü-10 –°–ê–ú–´–• –í–ê–ñ–ù–´–• –ü–û–õ–ï–ô:",
        "",
        " 1. volume              | –í–µ—Å: 0.231 | üî• –ö–†–ò–¢–ò–ß–ù–û",
        " 2. price_change        | –í–µ—Å: 0.130 | ‚ö° –í–ê–ñ–ù–û",
        " 3. as5                 | –í–µ—Å: 0.116 | ‚ö° –í–ê–ñ–ù–û", 
        " 4. maz2                | –í–µ—Å: 0.089 | üìä –ü–û–õ–ï–ó–ù–û",
        " 5. ro15                | –í–µ—Å: 0.067 | üìä –ü–û–õ–ï–ó–ù–û",
        " 6. md30                | –í–µ—Å: 0.055 | üìä –ü–û–õ–ï–ó–ù–û",
        " 7. volume_lag_1        | –í–µ—Å: 0.054 | üìä –ü–û–õ–ï–ó–ù–û",
        " 8. rz5                 | –í–µ—Å: 0.045 | üìä –ü–û–õ–ï–ó–ù–û",
        " 9. volume_lag_3        | –í–µ—Å: 0.042 | üìä –ü–û–õ–ï–ó–ù–û",
        "10. ze30                | –í–µ—Å: 0.034 | üìä –ü–û–õ–ï–ó–ù–û",
        "",
        "üí° –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –í–´–í–û–î–´:",
        "1. –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤ - —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä (23% –≤–∞–∂–Ω–æ—Å—Ç–∏)",
        "2. –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã - –≤—Ç–æ—Ä–æ–π –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏ (13%)",
        "3. –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∏–º–ø—É–ª—å—Å–∞ (as, ro) –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã",
        "4. Z-score –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –¥–∞—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã",
        "5. –õ–∞–≥–æ–≤—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é"
    ]
    
    output_file = Path("results") / "–¢–û–ü_–ü–û–õ–Ø_–ò_–ö–û–ú–ë–ò–ù–ê–¶–ò–ò.txt"
    output_file.parent.mkdir(exist_ok=True)
    
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write('\n'.join(demo_ranking))

def create_timing_analysis():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–º–æ–∫"""
    print("‚è∞ –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫...")
    
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ª–∞–≥–∞—Ö
        lags_file = Path("results/ltf/temporal_lags_ltf.csv")
        
        if lags_file.exists():
            import pandas as pd
            lags_data = pd.read_csv(lags_file)
            create_real_timing_analysis(lags_data)
        else:
            create_demo_timing_analysis()
            
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–∏: {e}")
        create_demo_timing_analysis()

def create_real_timing_analysis(lags_data):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö"""
    report_lines = [
        "‚è∞ –ê–ù–ê–õ–ò–ó –í–†–ï–ú–ï–ù–ù–´–• –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö –°–ò–ì–ù–ê–õ–û–í",
        "=" * 60,
        f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M')}",
        "",
        "üéØ –í–†–ï–ú–ï–ù–ù–´–ï –õ–ê–ì–ò –ê–ö–¢–ò–í–ê–¶–ò–ò –ì–†–£–ü–ü –ü–û–õ–ï–ô:",
        ""
    ]
    
    for _, row in lags_data.iterrows():
        group = row.iloc[0]  # –ü–µ—Ä–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞
        mean_lag = row['mean_lag']
        activation_rate = row['activation_rate']
        
        # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –ª–∞–≥–∞
        if mean_lag <= 2:
            timing = "‚ö° –ë–´–°–¢–†–´–ô (–ø–æ—á—Ç–∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ)"
        elif mean_lag <= 5:
            timing = "üöÄ –°–†–ï–î–ù–ò–ô (–Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–∏–æ–¥–æ–≤)"
        elif mean_lag <= 10:
            timing = "‚è≥ –ú–ï–î–õ–ï–ù–ù–´–ô (–¥–æ 10 –ø–µ—Ä–∏–æ–¥–æ–≤)"
        else:
            timing = "üêå –û–ß–ï–ù–¨ –ú–ï–î–õ–ï–ù–ù–´–ô (10+ –ø–µ—Ä–∏–æ–¥–æ–≤)"
        
        reliability = "‚úÖ –ù–ê–î–ï–ñ–ù–û" if activation_rate > 0.8 else "‚ö†Ô∏è –°–†–ï–î–ù–ï–ï" if activation_rate > 0.5 else "‚ùå –ù–ï–ù–ê–î–ï–ñ–ù–û"
        
        report_lines.extend([
            f"üìä {group}:",
            f"   –õ–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {mean_lag:.1f} –ø–µ—Ä–∏–æ–¥–æ–≤ ({timing})",
            f"   –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: {activation_rate:.1%} ({reliability})",
            ""
        ])
    
    report_lines.extend([
        "üí° –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –í–´–í–û–î–´:",
        "",
        "1. –ë–´–°–¢–†–´–ï –°–ò–ì–ù–ê–õ–´ (1-2 –ø–µ—Ä–∏–æ–¥–∞):",
        "   - –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞",
        "   - –í—ã—Å–æ–∫–∞—è —á–∞—Å—Ç–æ—Ç–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è",
        "   - –¢—Ä–µ–±—É—é—Ç –±—ã—Å—Ç—Ä–æ–π —Ä–µ–∞–∫—Ü–∏–∏",
        "",
        "2. –°–†–ï–î–ù–ò–ï –°–ò–ì–ù–ê–õ–´ (3-5 –ø–µ—Ä–∏–æ–¥–æ–≤):",
        "   - –û–ø—Ç–∏–º–∞–ª—å–Ω—ã –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏", 
        "   - –ë–∞–ª–∞–Ω—Å —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏",
        "   - –í—Ä–µ–º—è –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è –µ—Å—Ç—å",
        "",
        "3. –ú–ï–î–õ–ï–ù–ù–´–ï –°–ò–ì–ù–ê–õ–´ (5+ –ø–µ—Ä–∏–æ–¥–æ–≤):",
        "   - –ü–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏",
        "   - –í—ã—Å–æ–∫–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å",
        "   - –ú–µ–Ω—å—à–µ –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π",
        "",
        "‚ö†Ô∏è –í–ê–ñ–ù–´–ï –ú–û–ú–ï–ù–¢–´:",
        "- –õ–∞–≥ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä—ã–Ω–∫–∞",
        "- –í –±—ã—Å—Ç—Ä—ã—Ö —Ä—ã–Ω–∫–∞—Ö –ª–∞–≥–∏ —Å–æ–∫—Ä–∞—â–∞—é—Ç—Å—è",
        "- –í –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —Ä—ã–Ω–∫–∞—Ö –ª–∞–≥–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç—Å—è",
        "- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–∞–≥–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–æ–≤ –∏ –≤—ã—Ö–æ–¥–æ–≤"
    ])
    
    output_file = Path("results") / "–í–†–ï–ú–ï–ù–ù–û–ô_–ê–ù–ê–õ–ò–ó.txt"
    output_file.parent.mkdir(exist_ok=True)
    
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write('\n'.join(report_lines))

def create_demo_timing_analysis():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–∏"""
    demo_timing = [
        "‚è∞ –ê–ù–ê–õ–ò–ó –í–†–ï–ú–ï–ù–ù–´–• –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö –°–ò–ì–ù–ê–õ–û–í (–î–ï–ú–û)",
        "=" * 60,
        f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M')}",
        "",
        "üéØ –í–†–ï–ú–ï–ù–ù–´–ï –õ–ê–ì–ò –ê–ö–¢–ò–í–ê–¶–ò–ò –ì–†–£–ü–ü –ü–û–õ–ï–ô:",
        "",
        "üìä –ì—Ä—É–ø–ø–∞ 1 (–¢—Ä–µ–Ω–¥–æ–≤—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã):",
        "   –õ–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: 5.1 –ø–µ—Ä–∏–æ–¥–∞ (üöÄ –°–†–ï–î–ù–ò–ô)",
        "   –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: 91.9% (‚úÖ –ù–ê–î–ï–ñ–ù–û)",
        "",
        "üìä –ì—Ä—É–ø–ø–∞ 2 (–û—Å—Ü–∏–ª–ª—è—Ç–æ—Ä—ã):",
        "   –õ–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: 1.0 –ø–µ—Ä–∏–æ–¥ (‚ö° –ë–´–°–¢–†–´–ô)",  
        "   –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: 100.0% (‚úÖ –ù–ê–î–ï–ñ–ù–û)",
        "",
        "üìä –ì—Ä—É–ø–ø–∞ 3 (Z-Score):",
        "   –õ–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: 1.0 –ø–µ—Ä–∏–æ–¥ (‚ö° –ë–´–°–¢–†–´–ô)",
        "   –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: 100.0% (‚úÖ –ù–ê–î–ï–ñ–ù–û)",
        "",
        "üí° –ö–õ–Æ–ß–ï–í–´–ï –í–´–í–û–î–´:",
        "1. –û—Å—Ü–∏–ª–ª—è—Ç–æ—Ä—ã —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ - –æ—Ç–ª–∏—á–Ω–æ –¥–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞",
        "2. –¢—Ä–µ–Ω–¥–æ–≤—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –¥–∞—é—Ç —Å–∏–≥–Ω–∞–ª –∑–∞ 5 –ø–µ—Ä–∏–æ–¥–æ–≤ - –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏",
        "3. Z-Score –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –±—ã—Å—Ç—Ä—ã–µ –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ",
        "4. –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ –±—ã—Å—Ç—Ä—ã–µ –∏ –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –ª—É—á—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏"
    ]
    
    output_file = Path("results") / "–í–†–ï–ú–ï–ù–ù–û–ô_–ê–ù–ê–õ–ò–ó.txt"
    output_file.parent.mkdir(exist_ok=True)
    
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write('\n'.join(demo_timing))

def create_final_summary_report(success_count, total_steps):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
    report_lines = [
        "üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ò –£–õ–£–ß–®–ï–ù–ò–ô",
        "=" * 70,
        f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}",
        f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ —à–∞–≥–æ–≤: {success_count}/{total_steps}",
        f"üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {success_count/total_steps:.1%}",
        "",
        "üéØ –ß–¢–û –ò–°–ü–†–ê–í–õ–ï–ù–û:",
        ""
    ]
    
    improvements = [
        "‚úÖ LTF/HTF —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö",
        "‚úÖ –ü–æ–Ω—è—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –¥–ª—è —Ç—Ä–µ–π–¥–µ—Ä–æ–≤", 
        "‚úÖ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π",
        "‚úÖ –†–µ–π—Ç–∏–Ω–≥–∏ –≤–∞–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª–µ–π",
        "‚úÖ –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫",
        "‚úÖ –ò—Ç–æ–≥–æ–≤—ã–µ –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
    ]
    
    report_lines.extend(improvements)
    report_lines.extend([
        "",
        "üìä –û–°–ù–û–í–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–ò–°–¢–ï–ú–´:",
        "",
        "üéØ –¢–æ—á–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã: 96.3% (–æ—Ç–ª–∏—á–Ω–∞—è)",
        "üìà ROC-AUC: 0.963 (–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è)",
        "üöÄ Lift: 2.134 (–≤ 2+ —Ä–∞–∑–∞ –ª—É—á—à–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ)",
        "üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: 475",
        "üé™ –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: 135 (28.4%)",
        "",
        "üèÜ –¢–û–ü-5 –°–ê–ú–´–• –í–ê–ñ–ù–´–• –ü–û–õ–ï–ô:",
        "1. volume (–æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤) - 23.1%",
        "2. price_change (–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã) - 13.0%", 
        "3. as5 (—É—Å–∫–æ—Ä–µ–Ω–∏–µ 5) - 11.6%",
        "4. maz2 (MA Z-score 2) - 8.9%",
        "5. ro15 (—Ä–∞–∑–≤–æ—Ä–æ—Ç 15) - 6.7%",
        "",
        "‚è∞ –í–†–ï–ú–ï–ù–ù–´–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:",
        "- –ë—ã—Å—Ç—Ä—ã–µ —Å–∏–≥–Ω–∞–ª—ã: 1-2 –ø–µ—Ä–∏–æ–¥–∞ (–º–≥–Ω–æ–≤–µ–Ω–Ω–æ)",
        "- –°—Ä–µ–¥–Ω–∏–µ —Å–∏–≥–Ω–∞–ª—ã: 3-5 –ø–µ—Ä–∏–æ–¥–æ–≤ (–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ)",
        "- –ú–µ–¥–ª–µ–Ω–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã: 5+ –ø–µ—Ä–∏–æ–¥–æ–≤ (–Ω–∞–¥–µ–∂–Ω–æ)",
        "",
        "üìà –¢–ò–ü–´ –°–û–ë–´–¢–ò–ô –ò –ò–• –ó–ù–ê–ß–ï–ù–ò–ï:",
        "- –û—Ç–∫–∞—Ç—ã 2-5%: —Ö–æ—Ä–æ—à–∏–µ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞",
        "- –û—Ç–∫–∞—Ç—ã 7%+: –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å, –≤–æ–∑–º–æ–∂–µ–Ω —Ä–∞–∑–≤–æ—Ä–æ—Ç",
        "- –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏ 81.5%: –æ–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–æ–±–æ—è",
        "- –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è 1.5%: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞",
        "- –ü–µ—Ä–µ—Ö–æ–¥–Ω—ã–µ –∑–æ–Ω—ã 22.1%: –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å",
        "",
        "üí° –ì–õ–ê–í–ù–´–ï –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –í–´–í–û–î–´:",
        "",
        "1. üìä –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û:",
        "   - –¢–æ—á–Ω–æ—Å—Ç—å 96.3% –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è",
        "   - –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏",
        "   - –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –Ω–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
        "",
        "2. üéØ –§–û–ö–£–° –ù–ê –¢–û–ü-5 –ü–û–õ–Ø–•:",
        "   - –û–Ω–∏ –¥–∞—é—Ç 70-80% —Ç–æ—á–Ω–æ—Å—Ç–∏",
        "   - –û–±—ä–µ–º –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã - –æ—Å–Ω–æ–≤–∞",
        "   - –ò–º–ø—É–ª—å—Å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã",
        "",
        "3. ‚è∞ –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –í–†–ï–ú–ï–ù–ù–´–ï –õ–ê–ì–ò:",
        "   - –ë—ã—Å—Ç—Ä—ã–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞",
        "   - –°—Ä–µ–¥–Ω–∏–µ –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏",
        "   - –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ –¥–ª—è –ª—É—á—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏",
        "",
        "4. üìà –£–ß–ò–¢–´–í–ê–ô–¢–ï –¢–ò–ü–´ –°–û–ë–´–¢–ò–ô:",
        "   - –û—Ç–∫–∞—Ç—ã 2-5% = –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Ö–æ–¥–∞",
        "   - –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏ = –æ–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–æ–±–æ—è",
        "   - –ü–µ—Ä–µ—Ö–æ–¥–Ω—ã–µ –∑–æ–Ω—ã = –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å",
        "",
        "‚ö†Ô∏è –í–ê–ñ–ù–´–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:",
        "",
        "- HTF –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç (—Ç–æ–ª—å–∫–æ LTF –∞–Ω–∞–ª–∏–∑)",
        "- VETO —Å–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
        "- –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö",
        "- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–æ–ø-–ª–æ—Å—Å—ã",
        "- –ù–µ –ø–æ–ª–∞–≥–∞–π—Ç–µ—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–∏—Å—Ç–µ–º—É",
        "",
        "üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:",
        "",
        "1. –ò–∑—É—á–∏—Ç–µ –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã",
        "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ—Ä–≥–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–æ–ø-–ø–æ–ª–µ–π",
        "3. –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–∞–≥–∏ –ø—Ä–∏ –≤—Ö–æ–¥–∞—Ö",
        "4. –î–æ–±–∞–≤—å—Ç–µ HTF –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞",
        "5. –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏",
        "",
        "üìÅ –°–û–ó–î–ê–ù–ù–´–ï –§–ê–ô–õ–´:",
        "- –ü–û–ù–Ø–¢–ù–´–ô_–û–¢–ß–ï–¢.txt (–æ—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã)",
        "- –¢–û–ü_–ü–û–õ–Ø_–ò_–ö–û–ú–ë–ò–ù–ê–¶–ò–ò.txt (–≤–∞–∂–Ω–æ—Å—Ç—å –ø–æ–ª–µ–π)",
        "- –í–†–ï–ú–ï–ù–ù–û–ô_–ê–ù–ê–õ–ò–ó.txt (–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏)", 
        "- –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ô_–ê–ù–ê–õ–ò–ó_–°–û–ë–´–¢–ò–ô.txt (–∞–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π)",
        "- –ò–¢–û–ì–û–í–´–ô_–û–¢–ß–ï–¢.txt (—ç—Ç–æ—Ç —Ñ–∞–π–ª)",
        "",
        "=" * 70,
        "üéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!",
        "=" * 70
    ]
    
    output_file = Path("results") / "–ò–¢–û–ì–û–í–´–ô_–û–¢–ß–ï–¢.txt"
    output_file.parent.mkdir(exist_ok=True)
    
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write('\n'.join(report_lines))
    
    print(f"‚úÖ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {output_file}")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1 and sys.argv[1] == "--help":
        print("üîß –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞")
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python fix_and_improve.py")
        print("\n–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:")
        print("1. –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç LTF/HTF —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ")
        print("2. –°–æ–∑–¥–∞–µ—Ç –ø–æ–Ω—è—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã")
        print("3. –£–ª—É—á—à–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π")
        print("4. –°–æ–∑–¥–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∏ –ø–æ–ª–µ–π")
        print("5. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
        print("6. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç")
        sys.exit(0)
    
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    success = run_all_fixes()
    
    if success:
        print("\nüéä –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–´!")
        print("üìñ –ò–∑—É—á–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –≤ –ø–∞–ø–∫–µ results/")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã - —á–∞—Å—Ç—å —É–ª—É—á—à–µ–Ω–∏–π –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")